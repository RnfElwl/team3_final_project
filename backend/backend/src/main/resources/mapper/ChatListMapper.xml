<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ict.backend.dao.ChatListDAO">

    <insert id="insertChatMessage" parameterType="com.ict.backend.vo.ChatVO">
        insert into chat_content_tbl(content_id, chatlist_url, userid, chat_content, chat_date) values(#{content_id}, #{chatlist_url}, #{userid}, #{chat_content}, #{chat_date});
    </insert>
    <insert id="insertChatList" parameterType="com.ict.backend.vo.ChatListVO">
        insert into chat_list_tbl(chatlist_url, chat_title, userid, chatlist_type, chatlist_headcount, movie_code, movie_img_url, movie_no, movie_title) values(#{chatlist_url}, #{chat_title}, #{userid}, ${chatlist_type}, ${chatlist_headcount}, #{movie_code}, #{movie_img_url}, ${movie_no}, #{movie_title})
    </insert>

    <select id="selectOpenChatList" resultType="com.ict.backend.vo.ChatListVO">
        select chatlist_url, chat_title, chat_content, chatlist_type, chatlist_headcount, movie_img_url from chat_list_tbl clt
        where clt.chatlist_type=1 and clt.movie_no in (select mrt.movie_no from movie_review_tbl mrt where mrt.userid=#{param2})
        <if test="param1!=''">
            and chat_title like '%${param1}%'
        </if>
    </select>
    <select id="selectSoloChatList" resultType="com.ict.backend.vo.ChatListVO">
        select clt.chatlist_url, clt.chatlist_type, clt.chatlist_headcount, ut.usernick, it.image_url, cm.chat_content from chat_user_list cul
        join chat_list_tbl clt on cul.chatlist_url=clt.chatlist_url
        join chat_user_list cul2 on cul.chatlist_url=cul2.chatlist_url
        join user_tbl ut on cul2.userid=ut.userid
        left join image_tbl it on it.image_no=ut.userprofile
        LEFT JOIN (
        SELECT chatlist_url, chat_content
        FROM chat_content_tbl
        WHERE (chatlist_url, chat_date) IN (
        SELECT chatlist_url, MAX(chat_date)
        FROM chat_content_tbl
        GROUP BY chatlist_url
        )
        ) cm
        ON clt.chatlist_url = cm.chatlist_url
        where cul.userid=#{param1} and cul2.userid!=#{param1} and clt.chatlist_type=2
        <if test="param2!=''">
            and ut.usernick like '%${param2}%'
        </if>
    </select>
    <select id="selectChatContent" resultType="com.ict.backend.vo.ChatVO">
        SELECT
        date_records.chatlist_url,
        NULL AS userid,
        DATE(date_records.chat_date) AS chat_date,
        null as image_url,
        null as usernick,
        NULL AS chat_content,
        NULL AS content_id,
        0 AS chat_type
        FROM (
        SELECT MIN(dl.chat_date) AS chat_date, dl.chatlist_url
        FROM (
        select chatlist_url, first_conn as chat_date from chat_user_list
        union all
        select chatlist_url, chat_date from chat_content_tbl
        ) as dl where dl.chatlist_url=#{param1}
        GROUP BY DATE(dl.chat_date), dl.chatlist_url
        ) as date_records
        where
        (select date(cul.first_conn) from chat_user_list cul where cul.chatlist_url=#{param1} and userid=#{param2} and flag=1) &lt;= date_records.chat_date
        UNION ALL
        select * from(
        select chatlist_url, ut.userid, first_conn as chat_date, null as image_url, ut.usernick, null as chat_content, null as content_id, 2 as chat_type
        from chat_user_list cul
        join user_tbl ut on ut.userid=cul.userid
        where chatlist_url=#{param1}
        UNION ALL
        select chatlist_url, ut.userid, last_conn as chat_date, null as image_url, ut.usernick, null as chat_content, null as content_id, 3 as chat_type
        from chat_user_list cul
        join user_tbl ut on ut.userid=cul.userid
        where chatlist_url=#{param1}
        and last_conn is not null
        UNION ALL
        SELECT
        cct.chatlist_url,
        ut.userid,
        cct.chat_date,
        it.image_url ,
        ut.usernick,
        cct.chat_content,
        cct.content_id,
        1 AS chat_type
        FROM
        chat_content_tbl cct
        join user_tbl ut on ut.userid=cct.userid
        join image_tbl it on ut.userprofile=it.image_no
        where chatlist_url=#{param1} and cct.content_id not in (select rt.report_tbluuid from report_tbl rt where rt.report_userid=#{param2} and rt.report_tblname=3)
        ORDER BY chat_date
        ) as rs where
        (select cul.first_conn from chat_user_list cul where cul.chatlist_url=#{param1} and userid=#{param2} and flag=1) &lt;= rs.chat_date
        order by chat_date;
    </select>
    <insert id="insertChatEnter">
        insert ignore into chat_user_list(chatlist_url, userid) values(#{param1}, #{param2});
    </insert>
    <select id="selectChatUser" resultType="com.ict.backend.vo.ChatUserVO">
        select * from chat_user_list where chatlist_url=#{param1} and userid=#{param2} order by flag desc limit 1
    </select>
    <select id="selectChatRoom">
        select * from chat_list_tbl where chatlist_url=#{param1}
    </select>
    <select id="selectChatMember">
        select chatlist_url, ut.userid, it.image_url userprofile, ut.usernick from chat_user_list cul
        join user_tbl ut on ut.userid=cul.userid
        left join image_tbl it on ut.userprofile=it.image_no
        where cul.chatlist_url=#{param1} and cul.flag=1
    </select>
    <update id="updateChatHeadCount">
        update chat_list_tbl set chatlist_headcount=chatlist_headcount+1 where chatlist_url=#{param1}
    </update>
    <update id="updateChatHeadCountExit">
        update chat_list_tbl set chatlist_headcount=chatlist_headcount-1 where chatlist_url=#{param1}
    </update>
    <insert id="insertSchedule">
        insert into schedule_tbl values(#{schedule_id}, #{chatlist_url},#{schedule_title}, #{schedule_date}, #{schedule_deadline}, #{userid}, #{schedule_addr})
    </insert>
    <select id="selectScheduleList" resultType="com.ict.backend.vo.ScheduleVO">
        SELECT
        st.schedule_id,
        st.chatlist_url,
        st.schedule_title,
        st.schedule_date,
        st.schedule_deadline,
        st.userid AS creator_userid,  -- 투표를 만든 사람의 ID
        st.schedule_addr,
        IFNULL(SUM(sv.vote_value), 0) AS yes,  -- 찬성 투표 수
        IFNULL(COUNT(sv.vote_value) - SUM(sv.vote_value), 0) AS no,  -- 반대 투표 수
        (CASE sv2.vote_value
        WHEN 1 THEN 'yes'
        WHEN 0 THEN 'no'
        ELSE null
        end )AS user_vote
        FROM schedule_tbl st
        LEFT JOIN schedule_vote sv
        ON sv.schedule_id = st.schedule_id
        left join (select schedule_id, vote_value from schedule_vote where userid=#{param2}) sv2 on st.schedule_id=sv2.schedule_id
        WHERE st.chatlist_url = #{param1}
        GROUP BY st.schedule_id
    </select>
    <insert id="insertScheduleVoting">
        insert into schedule_vote(schedule_id, userid, vote_value) values(#{schedule_id}, #{userid}, ${vote_value})
        ON DUPLICATE KEY UPDATE
        userid = VALUES(userid),
        vote_value = VALUES(vote_value);
    </insert>
    <select id="selectVoteList" resultType="com.ict.backend.vo.MemberVO">
        select ut.usernick, it.image_url userprofile from schedule_vote sv
        join user_tbl ut on ut.userid=sv.userid
        join image_tbl it on ut.userprofile=it.image_no
        where sv.schedule_id=#{schedule_id} and vote_value=${vote_value}
    </select>
    <update id="updateChatUserExit">
        update chat_user_list set flag=0, last_conn=#{param3} where chatlist_url=#{param1} and userid=#{param2}
    </update>
    <update id="updateSoloChatUserConn">
        update chat_user_list set last_conn=#{param3} where chatlist_url=#{param1} and userid=#{param2}
    </update>
    <update id="updateSoloChatUserFirstConn">
        update chat_user_list set first_conn=#{param3} where chatlist_url=#{param1} and userid=#{param2}
    </update>
    <select id="selectSoloChatCheck" resultType="int">
        select exists(
        select c1.chatlist_url, c1.userid from chat_user_list c1
        where c1.chatlist_url=#{param1} and c1.userid=#{param2}) as soloCheck;
    </select>
    <select id="selectSoloChatRoomCheck">
        select clt.chatlist_url, cul1.userid as userid,cul2.userid user2  from chat_list_tbl clt
        join chat_user_list cul1 on clt.chatlist_url=cul1.chatlist_url
        join chat_user_list cul2 on cul1.chatlist_url=cul2.chatlist_url
        where chatlist_type=2 and cul1.userid=#{param1} and cul2.userid=#{param2}
    </select>
    <select id="selectReviewList" resultType="com.ict.backend.vo.ChatListVO">
        select ut.userid, mdt.movie_no, mdt.movie_code, movie_img_url, mdt.movie_kor as movie_title from user_tbl ut
        join movie_review_tbl mrt on ut.userid=mrt.userid
        join movie_data_tbl mdt on mrt.movie_no=mdt.movie_no
        join (select m.movie_code, min(m.movie_img_url) as movie_img_url from movie_img_tbl m group by m.movie_code) mit on mdt.movie_code=mit.movie_code
        where ut.userid=#{param1}
        <if test="param2!=''">
            and( mdt.movie_kor like '%${param2}%' or mdt.movie_eng like '%${param2}%')
        </if>
    </select>
    <select id="selectUserReviewCheck">
        select movie_no from chat_list_tbl clt
        where clt.chatlist_type=1 and clt.movie_no in (select mrt.movie_no from movie_review_tbl mrt where mrt.userid=#{param1} and mrt.movie_no=${param2});
    </select>
    <select id="selectSoloChatInfo">
        select ut.usernick, ut.usernick as chat_title, it.image_url as userprofile from chat_user_list cul
        join user_tbl ut on cul.userid=ut.userid
        left join image_tbl it on ut.userprofile=it.image_no
        where chatlist_url=#{param1} and cul.userid!=#{param2}
    </select>
</mapper>